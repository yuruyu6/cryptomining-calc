{"version":3,"sources":["utils/API.ts","utils/calculation.ts","components/svgs/Copy.tsx","components/svgs/XMark.tsx","components/ui/Modal.tsx","components/svgs/Ethereum.tsx","components/ui/Hint.tsx","components/ui/Loader.tsx","components/dashboard/dashboardBlocks/StatsDashboardBlock.tsx","utils/constants.tsx","components/dashboard/AddRecordForm.tsx","components/dashboard/dashboardBlocks/UserStatsDashboardBlock.tsx","components/svgs/Export.tsx","components/svgs/Import.tsx","components/dashboard/Header.tsx","components/svgs/Trashcan.tsx","components/dashboard/UserEquipment.tsx","components/dashboard/Dashboard.tsx","utils/hooks/useLocalStorage.tsx","components/RewardsHistoryTable.tsx","App.tsx","index.tsx"],"names":["axios","defaults","baseURL","process","getCurrentEthRate","a","get","data","getEthEarningsInfo","limit","getCurrentEthEarningsInfo","calcCryptoEarning","currentEthRate","reward24H","hashrate","Copy","xmlns","className","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","XMark","fillRule","clipRule","Modal","children","isShowing","useEffect","document","body","style","overflow","show","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","aria-hidden","EthereumSVG","width","height","id","points","Hint","hintText","data-tip","data-for","type","effect","Loader","micro","cx","cy","r","StatsDashboard","dashboardState","useContext","DashboardContext","isLoading","calculatedEarning","toFixed","earningsInfo","expectedReward24H","AddRecordForm","changeView","onAddNewRecord","useForm","mode","register","handleSubmit","watch","setValue","setFocus","getValues","watchAllFields","length","slice","onSubmit","onClick","placeholder","defaultValue","UserStatsDashboard","calculatedEarnings","userData","setUserData","useState","isFormActive","setIsFormActive","onClickChangeViewButton","savedData","summedHashrate","reduce","acc","elements","quantity","earningsEth","earningsUsdt","calcArrayOfCryptoEarnings","ethUsdRate","appear","newRecord","storedData","name","uuid","replace","c","Math","random","toString","push","Export","Import","Header","onClickLastUpdateLabel","onClickImportButton","onClickExportButton","dayjs","format","as","Trashcan","UserEquipment","getCalculatedEarningInUSDT","getCalculatedEarningInETH","sort","b","map","device","recordUUID","filter","record","createContext","initialDashboardState","undefined","Dashboard","setDashboardState","modalState","setModalState","key","initialValue","readValue","window","item","localStorage","getItem","JSON","parse","error","console","warn","storedValue","setStoredValue","handleStorageChange","addEventListener","removeEventListener","value","newValue","Function","setItem","stringify","dispatchEvent","Event","useLocalStorage","fetchData","useCallback","importInput","useRef","Provider","log","title","ref","readOnly","navigator","clipboard","writeText","current","onClickCopyButton","RewardsHistoryTable","setIsLoading","setIsShowing","rewardsCount","setRewardsCount","rewardsList","setRewardsList","getEarningsInfo","role","reward","index","Child","exchangeRate","timestamp","colSpan","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2a742353.chunk.js","sourcesContent":["import axios from 'axios'\n\naxios.defaults.baseURL = process.env.REACT_APP_BACKEND_URL || '/api'\n\nexport const getCurrentEthRate = async () => {\n  const { data } = await axios.get('/rate')\n  return data\n}\n\nexport const getEthEarningsInfo = async (limit: number = 1) => {\n  const { data } = await axios.get(`/${limit}`)\n  if (limit === 1) {\n    return data[0]\n  }\n  return data\n}\n\nexport const getCurrentEthEarningsInfo = async () => {\n  const { data } = await axios.get(`/ethEarnings`)\n  return data\n}\n","import { userEarningInfo } from '../types'\n\nexport const calcCryptoEarning = (\n  currentEthRate: number,\n  reward24H: number,\n  hashrate: number\n) => {\n  return (currentEthRate / 100) * reward24H * hashrate\n}\n\nexport const calcArrayOfCryptoEarnings = (\n  savedData: userEarningInfo[],\n  currentEthRate: number,\n  reward24H: number\n) => {\n  const summedHashrate = savedData.reduce(\n    (acc, data) => acc + +data.hashrate,\n    0\n  )\n  return {\n    elements: savedData.reduce((acc, data) => acc + +data.quantity, 0),\n    hashrate: summedHashrate,\n    earningsEth: (reward24H / 100) * summedHashrate,\n    earningsUsdt: calcCryptoEarning(currentEthRate, reward24H, summedHashrate),\n  }\n}\n\n/* eslint-disable no-mixed-operators */\nexport const generateUUID = (): string => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    let r = (Math.random() * 16) | 0,\n      v = c === 'x' ? r : (r & 0x3) | 0x8\n    return v.toString(16)\n  })\n}\n","export const Copy = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-6 w-6\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={2}\n        d=\"M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3\"\n      />\n    </svg>\n  )\n}\n","export const XMark = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-5 w-5\"\n      viewBox=\"0 0 20 20\"\n      fill=\"currentColor\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  )\n}\n","import { Transition } from '@headlessui/react'\nimport React, { useEffect } from 'react'\n\ninterface ModalProps {\n  isShowing: any\n}\n\nexport const Modal: React.FC<ModalProps> = ({ children, isShowing }) => {\n  useEffect(() => {\n    if (isShowing) {\n      document.body.style.overflow = 'hidden'\n    } else {\n      document.body.style.overflow = 'unset'\n    }\n    return () => {\n      document.body.style.overflow = 'unset'\n    }\n  }, [isShowing])\n\n  return (\n    <Transition\n      show={isShowing}\n      enter=\"transition-opacity duration-75\"\n      enterFrom=\"opacity-0\"\n      enterTo=\"opacity-100\"\n      leave=\"transition-opacity duration-150\"\n      leaveFrom=\"opacity-100\"\n      leaveTo=\"opacity-0\"\n    >\n      <div className=\"modal bg-gray-700 bg-opacity-95\">\n        <div className=\"flex justify-center items-center\">\n          <span\n            className=\"hidden sm:inline-block sm:align-middle sm:h-screen\"\n            aria-hidden=\"true\"\n          >\n            &#8203;\n          </span>\n          <div className=\"inline-block align-bottom py-8 px-12 text-gray-700 bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\n            {children}\n          </div>\n        </div>\n      </div>\n    </Transition>\n  )\n}\n","export const EthereumSVG = () => {\n  return (\n    <div>\n      <svg\n        className=\"fill-current text-gray-200\"\n        width=\"32\"\n        height=\"32\"\n        viewBox=\"0 0 784.37 1277.39\"\n      >\n        <g id=\"Layer_x0020_1\">\n          <metadata id=\"CorelCorpID_0Corel-Layer\" />\n          <g id=\"_1421394342400\">\n            <g>\n              <polygon points=\"392.07,0 383.5,29.11 383.5,873.74 392.07,882.29 784.13,650.54 \" />\n              <polygon points=\"392.07,0 -0,650.54 392.07,882.29 392.07,472.33 \" />\n              <polygon points=\"392.07,956.52 387.24,962.41 387.24,1263.28 392.07,1277.38 784.37,724.89 \" />\n              <polygon points=\"392.07,1277.38 392.07,956.52 -0,724.89 \" />\n              <polygon points=\"392.07,882.29 784.13,650.54 392.07,472.33 \" />\n              <polygon points=\"0,650.54 392.07,882.29 392.07,472.33 \" />\n            </g>\n          </g>\n        </g>\n      </svg>\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactTooltip from 'react-tooltip'\n\ninterface HintProps {\n  hintText: string\n}\n\nexport const Hint: React.FC<HintProps> = ({ hintText }) => {\n  return (\n    <div>\n      <div className=\"cursor-pointer\" data-tip data-for=\"hint\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"h-5 w-5 opacity-50\"\n          viewBox=\"0 0 20 20\"\n          fill=\"currentColor\"\n        >\n          <path\n            fillRule=\"evenodd\"\n            d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\"\n            clipRule=\"evenodd\"\n          />\n        </svg>\n      </div>\n      <ReactTooltip id=\"hint\" type=\"light\" effect=\"solid\">\n        <span className=\"text-gray-800 text-center\">{hintText}</span>\n      </ReactTooltip>\n    </div>\n  )\n}\n","import React from 'react'\n\ninterface LoaderProps {\n  micro?: boolean\n}\n\nexport const Loader: React.FC<LoaderProps> = ({ micro }) => {\n  return (\n    <div className=\"flex items-center justify-center px-2\">\n      <svg\n        className={\n          micro\n            ? 'animate-spin mr-2 h-4 w-4 text-white'\n            : 'animate-spin mr-2 h-7 w-7 text-white'\n        }\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n      >\n        <circle\n          className=\"opacity-25\"\n          cx=\"12\"\n          cy=\"12\"\n          r=\"10\"\n          stroke=\"currentColor\"\n          strokeWidth=\"4\"\n        ></circle>\n        <path\n          className=\"opacity-75\"\n          fill=\"currentColor\"\n          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n        ></path>\n      </svg>\n      Loading...\n    </div>\n  )\n}\n","import React, { useContext } from 'react'\nimport { DASHBOARD_EXAMPLE_HASHRATE } from '../../../utils/constants'\nimport { DashboardContext } from '../Dashboard'\nimport { EthereumSVG } from '../../svgs/Ethereum'\nimport { Hint } from '../../ui/Hint'\nimport { Loader } from '../../ui/Loader'\n\nexport const StatsDashboard: React.FC = () => {\n  const { dashboardState } = useContext(DashboardContext)\n\n  return (\n    <div className=\"flex-1 rounded-2xl pb-8 md:pb-16 pt-6 md:pt-10 px-8 bg-gray-700 transition hover:opacity-90\">\n      <div className=\"flex justify-between items-start md:mb-6\">\n        <div className=\"flex items-center opacity-50 select-none\">\n          <EthereumSVG />\n          Ethereum\n        </div>\n        <Hint hintText=\"Information provided by HiveOn Pool\" />\n      </div>\n      <div className=\"text-xl md:text-3xl block md:flex items-center justify-center md:space-x-4\">\n        <div className=\"text-center gap-4\">\n          Daily earnings per\n          <div className=\"text-gray-300\">{DASHBOARD_EXAMPLE_HASHRATE} MH/s</div>\n        </div>\n        <div className=\"mt-2 md:m-0 text-center\">\n          {dashboardState.isLoading ? (\n            <Loader />\n          ) : (\n            <div>\n              <div className=\"text-4xl md:text-7xl\">\n                ${dashboardState.calculatedEarning.toFixed(2)}\n              </div>\n              <div className=\"text-base md:text-lg text-gray-300\">\n                {dashboardState.earningsInfo.expectedReward24H.toFixed(5)} ETH\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const DASHBOARD_EXAMPLE_HASHRATE: number = 100","import React, { useEffect } from 'react'\nimport { SubmitHandler, useForm } from 'react-hook-form'\nimport { userEarningInfoInput } from '../../types'\n\ninterface AddRecordFormProps {\n  changeView: () => void\n  onAddNewRecord: (record: userEarningInfoInput) => void\n}\n\ninterface FormValues {\n  name: string\n  hashrate: number\n}\n\nexport const AddRecordForm: React.FC<AddRecordFormProps> = ({\n  changeView,\n  onAddNewRecord,\n}) => {\n  const { register, handleSubmit, watch, setValue, setFocus, getValues } =\n    useForm<FormValues>({\n      mode: 'onSubmit',\n    })\n  const watchAllFields = watch()\n\n  useEffect(() => {\n    setFocus('name')\n  }, [setFocus])\n\n  useEffect(() => {\n    if (getValues('hashrate') < 1) {\n      setValue('hashrate', 1)\n    }\n    if (getValues('name').length > 17) {\n      setValue('name', getValues('name').slice(0, 17))\n    }\n  }, [getValues, setValue, watchAllFields])\n\n  const onSubmit: SubmitHandler<FormValues> = (data: userEarningInfoInput) => {\n    onAddNewRecord(data)\n    changeView()\n  }\n\n  return (\n    <div>\n      <div className=\"flex justify-end\">\n        <button\n          className=\"cursor-pointer text-lg flex items-center opacity-50 transition-opacity hover:opacity-75\"\n          onClick={() => changeView()}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-4 w-4 mr-2\"\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M7.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l2.293 2.293a1 1 0 010 1.414z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n          Back\n        </button>\n      </div>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div>\n          <input\n            className=\"w-full my-3 pb-2\"\n            {...register('name')}\n            type=\"text\"\n            placeholder=\"Name\"\n          />\n        </div>\n        <div className=\"relative items-center\">\n          <input\n            className=\"w-full mb-3 py-2\"\n            {...register('hashrate')}\n            type=\"number\"\n            defaultValue=\"100\"\n            placeholder=\"Hashrate\"\n          />\n          <span className=\"absolute top-2 right-0\">MH/s</span>\n        </div>\n        <div className=\"flex justify-end\">\n          <button\n            className=\"opacity-50 transition-opacity hover:opacity-75\"\n            onClick={handleSubmit(onSubmit)}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-10 w-10\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={1.3}\n                d=\"M13 9l3 3m0 0l-3 3m3-3H8m13 0a9 9 0 11-18 0 9 9 0 0118 0z\"\n              />\n            </svg>\n          </button>\n        </div>\n      </form>\n    </div>\n  )\n}\n","import { Transition } from '@headlessui/react'\nimport React, { useContext, useState } from 'react'\nimport { userEarningInfo, userEarningInfoInput } from '../../../types'\nimport {\n  calcArrayOfCryptoEarnings,\n  generateUUID\n} from '../../../utils/calculation'\nimport { AddRecordForm } from '../AddRecordForm'\nimport { DashboardContext } from '../Dashboard'\nimport { Loader } from '../../ui/Loader'\n\nexport const UserStatsDashboard: React.FC = () => {\n  const { dashboardState, userData, setUserData } = useContext(DashboardContext)\n  const [isFormActive, setIsFormActive] = useState(false)\n\n  const onClickChangeViewButton = () => {\n    setIsFormActive(!isFormActive)\n  }\n\n  const onAddNewRecord = (newRecord: userEarningInfoInput) => {\n    let storedData: userEarningInfo[] = userData\n    const data: userEarningInfo = {\n      name:\n        newRecord.name !== '' ? newRecord.name : `Rig #${storedData.length}`,\n      hashrate: newRecord.hashrate ?? 1,\n      quantity: 1,\n      uuid: generateUUID(),\n    }\n    storedData.push(data)\n    setUserData(storedData as [])\n  }\n\n  let calculatedEarnings\n  if (dashboardState.currentEthRate && dashboardState.earningsInfo) {\n    calculatedEarnings = calcArrayOfCryptoEarnings(\n      userData,\n      dashboardState.currentEthRate.ethUsdRate,\n      dashboardState.earningsInfo.expectedReward24H\n    )\n  }\n\n  return (\n    <div className=\"flex-1 rounded-2xl text-xl pb-8 md:pb-12 lg:pb-4 pt-6 md:pt-10 px-8 bg-gray-700 transition hover:opacity-90\">\n      {isFormActive ? (\n        <Transition\n          show={isFormActive}\n          appear={true}\n          enter=\"transition-opacity duration-75\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"transition-opacity duration-150\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <AddRecordForm\n            changeView={onClickChangeViewButton}\n            onAddNewRecord={onAddNewRecord}\n          />\n        </Transition>\n      ) : (\n        <div>\n          {userData.length > 0 ? (\n            <div>\n              <div className=\"flex justify-between\">\n                <p className=\"text-center opacity-50 select-none\">Summary</p>\n                <button\n                  className=\"cursor-pointer text-lg flex items-center opacity-50 transition-opacity hover:opacity-75\"\n                  onClick={() => onClickChangeViewButton()}\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"h-5 w-5 mr-2\"\n                    viewBox=\"0 0 20 20\"\n                    fill=\"currentColor\"\n                  >\n                    <path\n                      fillRule=\"evenodd\"\n                      d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z\"\n                      clipRule=\"evenodd\"\n                    />\n                  </svg>\n                  Add\n                </button>\n              </div>\n\n              {dashboardState.isLoading ? (\n                <div className=\"text-4xl mt-4\">\n                  <Loader />\n                </div>\n              ) : (\n                calculatedEarnings && (\n                  <div className=\"text-center\">\n                    <p className=\"text-gray-300 mb-2\">\n                      {calculatedEarnings.hashrate} MH/s\n                    </p>\n                    <p className=\"text-4xl md:text-7xl\">\n                      ${calculatedEarnings.earningsUsdt.toFixed(2)}\n                    </p>\n                    <p className=\"text-base md:text-lg text-gray-300\">\n                      {calculatedEarnings.earningsEth.toFixed(5)} ETH\n                    </p>\n                  </div>\n                )\n              )}\n            </div>\n          ) : (\n            <button\n              className=\"flex flex-col mx-auto items-center text-center\"\n              onClick={() => onClickChangeViewButton()}\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-1/4 w-1/4 mb-4\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"\n                />\n              </svg>\n              Add your equipment for tracking earnings\n            </button>\n          )}\n        </div>\n      )}\n    </div>\n  )\n}\n","export const Export = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-5 w-5\"\n      viewBox=\"0 0 67.671 67.671\"\n      fill=\"currentColor\"\n    >\n      <path d=\"M52.946 23.348H42.834v6h10.112c3.007 0 5.34 1.536 5.34 2.858v26.606c0 1.322-2.333 2.858-5.34 2.858H14.724c-3.007 0-5.34-1.536-5.34-2.858V32.207c0-1.322 2.333-2.858 5.34-2.858h10.11v-6h-10.11c-6.359 0-11.34 3.891-11.34 8.858v26.606c0 4.968 4.981 8.858 11.34 8.858h38.223c6.358 0 11.34-3.891 11.34-8.858V32.207c-.001-4.968-4.982-8.859-11.341-8.859z\" />\n      <path d=\"M24.957 14.955a2.99 2.99 0 002.121-.879l3.756-3.756v30.522a3 3 0 106 0V10.117l3.959 3.959c.586.586 1.354.879 2.121.879s1.535-.293 2.121-.879a2.998 2.998 0 000-4.242L36.078.877A2.987 2.987 0 0033.958 0h-.046c-.767 0-1.534.291-2.12.877l-8.957 8.957a2.998 2.998 0 002.122 5.121z\" />\n    </svg>\n  )\n}\n","export const Import = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-5 w-5\"\n      viewBox=\"0 0 60.903 60.903\"\n      fill=\"currentColor\"\n    >\n      <path d=\"M49.561 16.464H39.45v6h10.111c3.008 0 5.341 1.535 5.341 2.857v26.607c0 1.321-2.333 2.858-5.341 2.858H11.34c-3.007 0-5.34-1.537-5.34-2.858V25.324c0-1.322 2.333-2.858 5.34-2.858h10.11v-6H11.34C4.981 16.466 0 20.357 0 25.324v26.605c0 4.968 4.981 8.857 11.34 8.857h38.223c6.357 0 11.34-3.891 11.34-8.857V25.324c-.001-4.969-4.982-8.86-11.342-8.86z\" />\n      <path d=\"M39.529 29.004a2.99 2.99 0 00-2.121.88l-3.756 3.755V3.117a3 3 0 00-6 0v30.724l-3.959-3.958a2.992 2.992 0 00-4.242 0 2.997 2.997 0 000 4.241l8.957 8.957a2.988 2.988 0 002.12.877h.045c.768 0 1.534-.291 2.12-.877l8.957-8.957a2.997 2.997 0 00-2.121-5.12z\" />\n    </svg>\n  )\n}\n","import React, { useContext } from 'react'\nimport dayjs from 'dayjs'\nimport { Loader } from '../ui/Loader'\nimport { DashboardContext } from './Dashboard'\nimport { Export } from '../svgs/Export'\nimport { Import } from '../svgs/Import'\nimport ReactTooltip from 'react-tooltip'\nimport { Transition } from '@headlessui/react'\n\ninterface HeaderProps {\n  onClickLastUpdateLabel: () => void\n  onClickImportButton: () => void\n  onClickExportButton: () => void\n}\n\nexport const Header: React.FC<HeaderProps> = ({\n  onClickLastUpdateLabel,\n  onClickImportButton,\n  onClickExportButton,\n}) => {\n  const { dashboardState, userData } = useContext(DashboardContext)\n\n  return (\n    <section className=\"flex mt-8 mb-12 h-8 items-center justify-between\">\n      <div className=\"flex flex-col md:flex-row md:space-x-2 space-y-3 md:space-y-0\">\n        <div\n          onClick={() => onClickLastUpdateLabel()}\n          className=\"flex items-center text-gray-400 hover:underline cursor-pointer\"\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-6 w-6 mr-1\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n            />\n          </svg>\n          Last update:\n          {dashboardState.isLoading ? (\n            <Loader micro={true} />\n          ) : (\n            <span className=\"ml-1 text-white\">{dayjs().format('HH:mm')}</span>\n          )}\n        </div>\n        <div className=\"flex items-center text-gray-400\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-6 w-6 mr-1\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M16 8v8m-4-5v5m-4-2v2m-2 4h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\"\n            />\n          </svg>\n          ETH/USDT Rate:\n          {dashboardState.isLoading ? (\n            <Loader micro={true} />\n          ) : (\n            <span className=\"ml-1 text-white\">\n              $\n              {(dashboardState.currentEthRate &&\n                dashboardState.currentEthRate.ethUsdRate.toFixed(2)) ??\n                'Fetch error'}\n            </span>\n          )}\n        </div>\n      </div>\n\n      <div className=\"flex space-x-2\">\n        <Transition\n          as=\"button\"\n          className=\"transition-colors text-gray-500 hover:text-gray-300 focus:outline-none\"\n          show={userData.length > 0}\n          enter=\"transition-opacity duration-75\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"transition-opacity duration-150\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n          data-tip\n          data-for=\"export-icon\"\n          onClick={onClickExportButton}\n        >\n          <Export />\n          <ReactTooltip id=\"export-icon\" type=\"light\" effect=\"solid\">\n            <span className=\"text-gray-800 text-center\">Export</span>\n          </ReactTooltip>\n        </Transition>\n        <button\n          className=\"cursor-pointer transition-colors text-gray-500 hover:text-gray-300 focus:outline-none\"\n          data-tip\n          data-for=\"import-icon\"\n          onClick={onClickImportButton}\n        >\n          <Import />\n          <ReactTooltip id=\"import-icon\" type=\"light\" effect=\"solid\">\n            <span className=\"text-gray-800 text-center\">Import</span>\n          </ReactTooltip>\n        </button>\n      </div>\n    </section>\n  )\n}\n","export const Trashcan = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-5 w-5\"\n      viewBox=\"0 0 20 20\"\n      fill=\"currentColor\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  )\n}\n","import React, { useContext } from 'react'\nimport { userEarningInfo } from '../../types'\nimport { calcCryptoEarning } from '../../utils/calculation'\nimport { DashboardContext } from './Dashboard'\nimport { Trashcan } from '../svgs/Trashcan'\nimport { Loader } from '../ui/Loader'\n\nexport const UserEquipment: React.FC = () => {\n  const { dashboardState, userData, setUserData } = useContext(DashboardContext)\n\n  const onClickDeleteButton = (recordUUID: string) => {\n    const storedData: userEarningInfo[] = userData\n    setUserData(storedData.filter((record) => record.uuid !== recordUUID) as [])\n  }\n\n  const getCalculatedEarningInUSDT = (hashrate: number) => {\n    if (dashboardState.currentEthRate && dashboardState.earningsInfo) {\n      return calcCryptoEarning(\n        dashboardState.currentEthRate.ethUsdRate,\n        dashboardState.earningsInfo.expectedReward24H,\n        hashrate\n      ).toFixed(2)\n    }\n  }\n\n  const getCalculatedEarningInETH = (hashrate: number) => {\n    if (dashboardState.earningsInfo) {\n      return (\n        (dashboardState.earningsInfo.expectedReward24H / 100) *\n        hashrate\n      ).toFixed(5)\n    }\n  }\n\n  return (\n    <div className=\"mt-8 mb-6\">\n      {dashboardState.isLoading ? (\n        <Loader />\n      ) : userData.length > 0 ? (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 grid-flow-row gap-4 md:gap-6 \">\n          {userData\n            .sort((a: userEarningInfo, b: userEarningInfo) => {\n              if (+a.hashrate < +b.hashrate) return 1\n              if (+a.hashrate > +b.hashrate) return -1\n              return 0\n            })\n            .map((device: userEarningInfo) => (\n              <div key={device.uuid}>\n                <div className=\"py-3 px-4 bg-gray-700 rounded hover:opacity-90\">\n                  <div className=\"\">\n                    <div className=\"flex justify-between items-center opacity-50 truncate\">\n                      {device.name} - {device.hashrate} MH/s\n                      <button onClick={() => onClickDeleteButton(device.uuid)}>\n                        <Trashcan />\n                      </button>\n                    </div>\n                    <div>\n                      <p>${getCalculatedEarningInUSDT(device.hashrate)}</p>\n                      <p>{getCalculatedEarningInETH(device.hashrate)} ETH</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n        </div>\n      ) : null}\n    </div>\n  )\n}\n","import React, {\n  createContext,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\nimport { currentEthRate, earningsInfo } from '../../types'\nimport { getCurrentEthEarningsInfo, getCurrentEthRate } from '../../utils/API'\nimport { calcCryptoEarning } from '../../utils/calculation'\nimport { DASHBOARD_EXAMPLE_HASHRATE } from '../../utils/constants'\nimport { useLocalStorage } from '../../utils/hooks/useLocalStorage'\nimport { Copy } from '../svgs/Copy'\nimport { XMark } from '../svgs/XMark'\nimport { Modal } from '../ui/Modal'\nimport { StatsDashboard } from './dashboardBlocks/StatsDashboardBlock'\nimport { UserStatsDashboard } from './dashboardBlocks/UserStatsDashboardBlock'\nimport { Header } from './Header'\nimport { UserEquipment } from './UserEquipment'\n\ninterface DashboardState {\n  isLoading: boolean\n  calculatedEarning: number | undefined\n  currentEthRate: currentEthRate | undefined\n  earningsInfo: earningsInfo | undefined\n}\n\ninterface DashboardContextProps {\n  dashboardState: any\n  userData: any\n  setUserData: any\n}\n\ninterface ModalState {\n  isShowing: boolean\n  mode: modalStateMod\n}\n\ntype modalStateMod = 'import' | 'export'\n\nexport const DashboardContext = createContext<Partial<DashboardContextProps>>(\n  {}\n)\n\nconst initialDashboardState = {\n  isLoading: true,\n  currentEthRate: undefined,\n  earningsInfo: undefined,\n  calculatedEarning: undefined,\n}\n\nexport const Dashboard: React.FC = () => {\n  const [dashboardState, setDashboardState] = useState<DashboardState>(\n    initialDashboardState\n  )\n  const [modalState, setModalState] = useState<ModalState>({\n    isShowing: false,\n    mode: 'import',\n  })\n  const [userData, setUserData] = useLocalStorage('crypto', [])\n\n  const fetchData = useCallback(async () => {\n    setDashboardState(initialDashboardState)\n    const currentEthRate = await getCurrentEthRate()\n    const earningsInfo = await getCurrentEthEarningsInfo()\n    setDashboardState({\n      isLoading: false,\n      currentEthRate: currentEthRate,\n      earningsInfo: earningsInfo,\n      calculatedEarning: calcCryptoEarning(\n        currentEthRate.ethUsdRate,\n        earningsInfo.expectedReward24H,\n        DASHBOARD_EXAMPLE_HASHRATE\n      ),\n    })\n  }, [])\n\n  const onClickImportButton = () => {\n    console.log('onClickImportButton')\n  }\n\n  const onClickExportButton = () => {\n    setModalState({ isShowing: true, mode: 'export' })\n  }\n\n  const onClickCloseModalButton = () => {\n    setModalState({ isShowing: false, mode: modalState.mode })\n  }\n\n  const importInput = useRef<HTMLInputElement>(null)\n\n  const onClickCopyButton = () => {\n    if (importInput) {\n      navigator.clipboard.writeText(importInput.current?.value || '[]')\n      setModalState({ isShowing: false, mode: modalState.mode })\n    }\n  }\n\n  useEffect(() => {\n    fetchData()\n  }, [fetchData])\n\n  return (\n    <DashboardContext.Provider\n      value={{ dashboardState, userData, setUserData }}\n    >\n      <Header\n        onClickLastUpdateLabel={fetchData}\n        onClickImportButton={onClickImportButton}\n        onClickExportButton={onClickExportButton}\n      />\n      <div className=\"block lg:flex max-w-7xl space-x-0 lg:space-x-6 space-y-6 lg:space-y-0 justify-around mx-auto\">\n        <StatsDashboard />\n        <UserStatsDashboard />\n      </div>\n      <UserEquipment />\n      <Modal isShowing={modalState.isShowing}>\n        {modalState.mode === 'export' && (\n          <div>\n            <div className=\"flex justify-end mb-2 text-gray-500 hover:text-black transition-colors\">\n              <button onClick={() => onClickCloseModalButton()} title=\"Close\">\n                <XMark />\n              </button>\n            </div>\n            <p className=\"text-black text-xl text-center my-2\">Export data</p>\n            <p className=\"text-black text-sm text-center my-2\">Click the button below to save your data and use import function on another device</p>\n            <div className=\"relative items-center\">\n              <input\n                ref={importInput}\n                className=\"bg-white text-black w-full border rounded pr-10 py-2 pl-2\"\n                type=\"text\"\n                readOnly\n                defaultValue={JSON.stringify(userData)}\n              />\n              <button\n                className=\"absolute z-10 top-2 right-2 text-gray-500 hover:text-black transition-colors\"\n                onClick={() => onClickCopyButton()}\n                title=\"Copy\"\n              >\n                <Copy />\n              </button>\n            </div>\n          </div>\n        )}\n      </Modal>\n    </DashboardContext.Provider>\n  )\n}\n","import { Dispatch, SetStateAction, useEffect, useState } from 'react'\n\ntype SetValue<T> = Dispatch<SetStateAction<T>>\n\nexport function useLocalStorage<T>(\n  key: string,\n  initialValue: T\n): [T, SetValue<T>] {\n  const readValue = (): T => {\n    if (typeof window === 'undefined') {\n      return initialValue\n    }\n\n    try {\n      const item = window.localStorage.getItem(key)\n      return item ? (JSON.parse(item) as T) : initialValue\n    } catch (error) {\n      console.warn(`Error reading localStorage key \"${key}\":`, error)\n      return initialValue\n    }\n  }\n\n  const [storedValue, setStoredValue] = useState<T>(readValue)\n\n  const setValue: SetValue<T> = (value) => {\n    if (typeof window == 'undefined') {\n      console.warn(\n        `Tried setting localStorage key \"${key}\" even though environment is not a client`\n      )\n    }\n\n    try {\n      const newValue = value instanceof Function ? value(storedValue) : value\n\n      window.localStorage.setItem(key, JSON.stringify(newValue))\n      setStoredValue(newValue)\n      window.dispatchEvent(new Event('local-storage'))\n    } catch (error) {\n      console.warn(`Error setting localStorage key “${key}”:`, error)\n    }\n  }\n\n  useEffect(() => {\n    setStoredValue(readValue())\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    const handleStorageChange = () => {\n      setStoredValue(readValue())\n    }\n\n    window.addEventListener('storage', handleStorageChange)\n    window.addEventListener('local-storage', handleStorageChange)\n\n    return () => {\n      window.removeEventListener('storage', handleStorageChange)\n      window.removeEventListener('local-storage', handleStorageChange)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return [storedValue, setValue]\n}\n","import dayjs from 'dayjs'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { Transition } from '@headlessui/react'\nimport { earningsInfo } from '../types'\nimport { getEthEarningsInfo as getEarningsInfo } from '../utils/API'\nimport { calcCryptoEarning } from '../utils/calculation'\nimport { Loader } from './ui/Loader'\n\nexport const RewardsHistoryTable: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [isShowing, setIsShowing] = useState(true)\n  const [rewardsCount, setRewardsCount] = useState(10)\n  const [rewardsList, setRewardsList] = useState<earningsInfo[]>()\n\n  const fetchData = useCallback(async () => {\n    setRewardsList(await getEarningsInfo(rewardsCount))\n    setIsLoading(false)\n  }, [rewardsCount])\n\n  useEffect(() => {\n    fetchData()\n  }, [fetchData])\n\n  const onClickShowMoreButton = () => {\n    if (rewardsCount <= 99) {\n      setRewardsCount(rewardsCount + 10)\n    }\n  }\n\n  return (\n    <div>\n      <h1\n        className=\"flex justify-center items-center text-4xl font-bold group cursor-pointer\"\n        onClick={() => setIsShowing(!isShowing)}\n        role=\"button\"\n      >\n        Rewards History\n        <div className=\"text-gray-600 group-hover:text-gray-300 transition-colors ml-2\">\n          {isShowing ? (\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-6 w-6\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M3.707 2.293a1 1 0 00-1.414 1.414l14 14a1 1 0 001.414-1.414l-1.473-1.473A10.014 10.014 0 0019.542 10C18.268 5.943 14.478 3 10 3a9.958 9.958 0 00-4.512 1.074l-1.78-1.781zm4.261 4.26l1.514 1.515a2.003 2.003 0 012.45 2.45l1.514 1.514a4 4 0 00-5.478-5.478z\"\n                clipRule=\"evenodd\"\n              />\n              <path d=\"M12.454 16.697L9.75 13.992a4 4 0 01-3.742-3.741L2.335 6.578A9.98 9.98 0 00.458 10c1.274 4.057 5.065 7 9.542 7 .847 0 1.669-.105 2.454-.303z\" />\n            </svg>\n          ) : (\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-6 w-6\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n            >\n              <path d=\"M10 12a2 2 0 100-4 2 2 0 000 4z\" />\n              <path\n                fillRule=\"evenodd\"\n                d=\"M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n          )}\n        </div>\n      </h1>\n      {isShowing && <p className=\"text-center text-gray-300\">per 100 MH/s</p>}\n      <Transition\n        show={isShowing}\n        appear={true}\n        enter=\"transition-opacity duration-75\"\n        enterFrom=\"opacity-0\"\n        enterTo=\"opacity-100\"\n        leave=\"transition-opacity duration-150\"\n        leaveFrom=\"opacity-100\"\n        leaveTo=\"opacity-0\"\n      >\n        {isLoading ? (\n          <Loader />\n        ) : (\n          rewardsList && (\n            <div>\n              <table className=\"table-auto text-xs md:text-xl my-4 mx-auto overflow-x-auto\">\n                <thead>\n                  <tr className=\" bg-gray-800\">\n                    <th className=\"px-1 sm:px-2 md:px-12 py-2\">\n                      ETH/USDT Rate\n                    </th>\n                    <th className=\"px-1 sm:px-2 md:px-12 py-2\">\n                      ETH Expected Reward\n                    </th>\n                    <th className=\"px-1 sm:px-2 md:px-12 py-2\">\n                      USD Expected Reward\n                    </th>\n                    <th className=\"px-1 sm:px-2 md:px-12 py-2\">Date</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {rewardsList.map((reward, index) => (\n                    <Transition.Child\n                      as=\"tr\"\n                      key={reward.timestamp}\n                      className=\"bg-gray-700 hover:bg-gray-600 transition-colors odd:bg-gray-800\"\n                      enter=\"transition-opacity ease-linear duration-150\"\n                      enterFrom=\"opacity-0\"\n                      enterTo=\"opacity-100\"\n                      leave=\"transition-opacity ease-linear duration-150\"\n                      leaveFrom=\"opacity-100\"\n                      leaveTo=\"opacity-0\"\n                    >\n                      <td className=\"border border-gray-300 p-2\">\n                        ${reward.exchangeRate}\n                      </td>\n                      <td className=\"border border-gray-300 p-2\">\n                        {reward.expectedReward24H.toFixed(5)} ETH\n                      </td>\n                      <td className=\"border border-gray-300 p-2\">\n                        $\n                        {calcCryptoEarning(\n                          reward.expectedReward24H,\n                          reward.exchangeRate,\n                          100\n                        ).toFixed(2)}\n                      </td>\n                      <td\n                        className=\"border border-gray-300 p-2\"\n                        title={dayjs(reward.timestamp).format(\n                          'HH:mm DD/MM/YYYY'\n                        )}\n                      >\n                        {dayjs(reward.timestamp).format('DD/MM/YYYY')}\n                      </td>\n                    </Transition.Child>\n                  ))}\n                  {rewardsCount <= 99 && (\n                    <tr\n                      className=\"cursor-pointer hover:border hover:border-blue-900\"\n                      onClick={() => onClickShowMoreButton()}\n                    >\n                      <td\n                        colSpan={4}\n                        className=\"text-center py-4 hover:bg-blue-900 transition-colors\"\n                      >\n                        Show More\n                      </td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </div>\n          )\n        )}\n      </Transition>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Dashboard } from './components/dashboard/Dashboard'\nimport { RewardsHistoryTable } from './components/RewardsHistoryTable'\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"bg-gray-800 min-h-screen\">\n      <div className=\"md:container mx-auto p-4 top-8 md:top-20\">\n        <Dashboard />\n        <RewardsHistoryTable />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './App'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}