{"version":3,"sources":["utils/API.ts","utils/calculation.ts","utils/constants.tsx","components/ui/Modal.tsx","components/svgs/Ethereum.tsx","components/ui/Hint.tsx","components/ui/Loader.tsx","components/dashboard/dashboardBlocks/StatsDashboardBlock/StatsPeriodSwitch.tsx","components/dashboard/dashboardBlocks/StatsDashboardBlock/StatsDashboardBlock.tsx","utils/index.ts","components/svgs/AMD.tsx","components/svgs/Nvidia.tsx","components/dashboard/dashboardBlocks/UserStatsDashboardBlock/DeviceSelector.tsx","components/dashboard/dashboardBlocks/UserStatsDashboardBlock/AddRecordForm.tsx","utils/hooks/useOnClickOutside.tsx","components/dashboard/dashboardBlocks/UserStatsDashboardBlock/UserStatsDashboardBlock.tsx","components/svgs/Export.tsx","components/svgs/Import.tsx","components/dashboard/Header.tsx","components/svgs/Copy.tsx","components/svgs/XMark.tsx","components/dashboard/modalBlocks/ExportBlock.tsx","components/dashboard/modalBlocks/ImportBlock.tsx","components/svgs/Trashcan.tsx","components/dashboard/UserEquipment.tsx","components/dashboard/Dashboard.tsx","utils/hooks/useLocalStorage.tsx","components/RewardsHistoryTable.tsx","App.tsx","index.tsx"],"names":["axios","defaults","baseURL","process","getEthEarningsInfo","a","limit","get","data","getCurrentEthEarningsInfo","calcCryptoEarning","currentEthRate","reward24H","hashrate","period","STAT_PERIODS","name","value","DEFAULT_STAT_PERIOD","DEVICE_VENDOR","DEVICE_LIST","vendor","isLHR","modalRoot","document","querySelector","Modal","children","isShowing","useEffect","body","style","overflow","ReactDOM","createPortal","className","aria-hidden","EthereumSVG","width","height","viewBox","id","points","Hint","hintText","data-tip","data-for","xmlns","fill","fillRule","d","clipRule","type","effect","Loader","micro","cx","cy","r","stroke","strokeWidth","StatsPeriodSwitch","onClickSwitchPeriodField","currentPeriod","onClick","strokeLinecap","strokeLinejoin","StatsDashboard","dashboardState","useContext","DashboardContext","isLoading","calculatedEarning","toFixed","earningsInfo","expectedReward24H","isMobile","test","navigator","userAgent","AMD","Nvidia","VendorIcon","DeviceSelector","deviceList","onClickSelectorItem","map","device","Number","AddRecordForm","ref","handler","changeView","onAddNewRecord","useState","isVisibleDeviceSelector","setIsVisibleDeviceSelector","setDeviceList","useForm","mode","register","handleSubmit","watch","setValue","setFocus","errors","formState","inputNameRef","useRef","maxLength","rest","listener","event","el","current","contains","target","addEventListener","removeEventListener","filter","RegExp","toLowerCase","filterDeviceByName","onSubmit","scrollIntoInput","scrollIntoView","placeholder","e","onFocus","length","validate","String","defaultValue","disabled","Boolean","UserStatsDashboard","calculatedEarnings","userData","setUserData","isFormActive","setIsFormActive","onClickChangeViewButton","savedData","summedHashrate","reduce","acc","elements","quantity","earningsEth","earningsUsdt","calcArrayOfCryptoEarnings","show","appear","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","newRecord","storedData","uuid","replace","c","Math","random","toString","push","Export","Import","Header","onClickLastUpdateLabel","onClickImportButton","onClickExportButton","dayjs","format","as","aria-label","disable","Copy","XMark","ExportBlock","onClickCloseModalButton","textInput","title","readOnly","JSON","stringify","clipboard","writeText","ImportBlock","setError","formData","parsedFormData","parse","exportPhrase","error","message","Trashcan","UserEquipment","getCalculatedEarningInUSDT","getCalculatedEarningInETH","sort","b","recordUUID","record","createContext","initialDashboardState","undefined","Dashboard","key","initialValue","readValue","window","item","localStorage","getItem","console","warn","storedValue","setStoredValue","handleStorageChange","newValue","Function","setItem","dispatchEvent","Event","useLocalStorage","setDashboardState","modalState","setModalState","fetchData","useCallback","prevState","exchangeRate","Provider","currentPeriodIndex","findIndex","nextPeriodIndex","RewardsHistoryTable","setIsLoading","setIsShowing","rewardsCount","setRewardsCount","rewardsList","setRewardsList","getEarningsInfo","role","reward","index","Child","timestamp","App","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d9c00c1d.chunk.js","sourcesContent":["import axios from 'axios'\n\naxios.defaults.baseURL = process.env.REACT_APP_BACKEND_URL || '/api'\n\nexport const getCurrentEthRate = async () => {\n  const { data } = await axios.get('/rate')\n  return data\n}\n\nexport const getEthEarningsInfo = async (limit: number = 1) => {\n  const { data } = await axios.get(`/${limit}`)\n  if (limit === 1) {\n    return data[0]\n  }\n  return data\n}\n\nexport const getCurrentEthEarningsInfo = async () => {\n  const { data } = await axios.get(`/ethEarnings`)\n  return data\n}\n","import { userEarningInfo } from '../types'\n\nexport const calcCryptoEarning = (\n  currentEthRate: number,\n  reward24H: number,\n  hashrate: number,\n  period: number = 1\n) => {\n  return (currentEthRate / 100) * reward24H * hashrate * period\n}\n\nexport const calcArrayOfCryptoEarnings = (\n  savedData: userEarningInfo[],\n  currentEthRate: number,\n  reward24H: number,\n  period: number = 1\n) => {\n  const summedHashrate = savedData.reduce(\n    (acc, data) => acc + +data.hashrate,\n    0\n  )\n  return {\n    elements: savedData.reduce((acc, data) => acc + +data.quantity, 0),\n    hashrate: summedHashrate,\n    earningsEth: (reward24H / 100) * summedHashrate * period,\n    earningsUsdt: calcCryptoEarning(currentEthRate, reward24H, summedHashrate, period),\n  }\n}\n\n/* eslint-disable no-mixed-operators */\nexport const generateUUID = (): string => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    let r = (Math.random() * 16) | 0,\n      v = c === 'x' ? r : (r & 0x3) | 0x8\n    return v.toString(16)\n  })\n}\n","import { DeviceInfo, DeviceVendor, StatPeriod } from '../types'\n\nexport const DASHBOARD_EXAMPLE_HASHRATE: number = 100\nexport const MAX_ITEMS_IN_REWARDS_HISTORY_TABLE: number = 200\n\nexport const STAT_PERIODS: StatPeriod[] = [\n  { name: 'daily', value: 1 },\n  { name: 'weekly', value: 7 },\n  { name: 'monthly', value: 30 },\n  { name: 'yearly', value: 360 },\n]\nexport const DEFAULT_STAT_PERIOD: StatPeriod = STAT_PERIODS[0]\n\nexport const DEVICE_VENDOR: DeviceVendor[] = ['NVIDIA', 'AMD']\nexport const DEVICE_LIST: DeviceInfo[] = [\n  { vendor: DEVICE_VENDOR[0], name: 'RTX 3060', hashrate: 50, isLHR: false },\n  { vendor: DEVICE_VENDOR[0], name: 'RTX 3060', hashrate: 32, isLHR: true },\n  { vendor: DEVICE_VENDOR[0], name: 'RTX 3060TI', hashrate: 60, isLHR: false },\n  { vendor: DEVICE_VENDOR[0], name: 'RTX 3060TI', hashrate: 42, isLHR: true },\n  { vendor: DEVICE_VENDOR[0], name: 'RTX 3070', hashrate: 64, isLHR: false },\n  { vendor: DEVICE_VENDOR[0], name: 'RTX 3070', hashrate: 42, isLHR: true },\n  { vendor: DEVICE_VENDOR[0], name: 'RTX 3070TI', hashrate: 58, isLHR: true },\n  { vendor: DEVICE_VENDOR[0], name: 'RTX 3080', hashrate: 100, isLHR: false },\n  { vendor: DEVICE_VENDOR[0], name: 'RTX 3080', hashrate: 65, isLHR: true },\n  { vendor: DEVICE_VENDOR[0], name: 'RTX 3080TI', hashrate: 90, isLHR: true },\n  { vendor: DEVICE_VENDOR[0], name: 'RTX 3090', hashrate: 115, isLHR: false },\n  { vendor: DEVICE_VENDOR[1], name: 'RX 5500XT', hashrate: 26, isLHR: false },\n  { vendor: DEVICE_VENDOR[1], name: 'RX 5600XT', hashrate: 40, isLHR: false },\n  { vendor: DEVICE_VENDOR[1], name: 'RX 5700/XT', hashrate: 55, isLHR: false },\n  { vendor: DEVICE_VENDOR[1], name: 'RX 6600/XT', hashrate: 33, isLHR: false },\n  { vendor: DEVICE_VENDOR[1], name: 'RX 6700XT', hashrate: 48, isLHR: false },\n  { vendor: DEVICE_VENDOR[1], name: 'RX 6800/XT', hashrate: 64, isLHR: false },\n  { vendor: DEVICE_VENDOR[1], name: 'RX 6900XT', hashrate: 64, isLHR: false },\n]\n","import React, { useEffect } from 'react'\nimport ReactDOM from 'react-dom'\n\ninterface ModalProps {\n  isShowing: boolean\n}\n\nconst modalRoot = document.querySelector('#modal-root')\n\nexport const Modal: React.FC<ModalProps> = ({ children, isShowing }) => {\n  useEffect(() => {\n    if (isShowing) {\n      document.body.style.overflow = 'hidden'\n    } else {\n      document.body.style.overflow = 'unset'\n    }\n    return () => {\n      document.body.style.overflow = 'unset'\n    }\n  }, [isShowing])\n\n  return (\n    modalRoot &&\n    ReactDOM.createPortal(\n      isShowing && (\n        <div className=\"modal bg-gray-700 bg-opacity-95\">\n          <div className=\"flex justify-center items-center\">\n            <span\n              className=\"hidden sm:inline-block sm:align-middle sm:h-screen\"\n              aria-hidden=\"true\"\n            >\n              &#8203;\n            </span>\n            <div className=\"inline-block align-bottom py-8 px-12 text-gray-700 bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\n              {children}\n            </div>\n          </div>\n        </div>\n      ),\n      modalRoot\n    )\n  )\n}\n","export const EthereumSVG = () => {\n  return (\n    <div>\n      <svg\n        className=\"fill-current text-gray-200\"\n        width=\"32\"\n        height=\"32\"\n        viewBox=\"0 0 784.37 1277.39\"\n      >\n        <g id=\"Layer_x0020_1\">\n          <metadata id=\"CorelCorpID_0Corel-Layer\" />\n          <g id=\"_1421394342400\">\n            <g>\n              <polygon points=\"392.07,0 383.5,29.11 383.5,873.74 392.07,882.29 784.13,650.54 \" />\n              <polygon points=\"392.07,0 -0,650.54 392.07,882.29 392.07,472.33 \" />\n              <polygon points=\"392.07,956.52 387.24,962.41 387.24,1263.28 392.07,1277.38 784.37,724.89 \" />\n              <polygon points=\"392.07,1277.38 392.07,956.52 -0,724.89 \" />\n              <polygon points=\"392.07,882.29 784.13,650.54 392.07,472.33 \" />\n              <polygon points=\"0,650.54 392.07,882.29 392.07,472.33 \" />\n            </g>\n          </g>\n        </g>\n      </svg>\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactTooltip from 'react-tooltip'\n\ninterface HintProps {\n  hintText: string\n}\n\nexport const Hint: React.FC<HintProps> = ({ hintText }) => {\n  return (\n    <div>\n      <div className=\"cursor-pointer\" data-tip data-for=\"hint\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"h-5 w-5 opacity-50 transition-opacity hover:opacity-75\"\n          viewBox=\"0 0 20 20\"\n          fill=\"currentColor\"\n        >\n          <path\n            fillRule=\"evenodd\"\n            d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\"\n            clipRule=\"evenodd\"\n          />\n        </svg>\n      </div>\n      <ReactTooltip id=\"hint\" type=\"light\" effect=\"solid\">\n        <span className=\"text-gray-800 text-center\">{hintText}</span>\n      </ReactTooltip>\n    </div>\n  )\n}\n","import React from 'react'\n\ninterface LoaderProps {\n  micro?: boolean\n}\n\nexport const Loader: React.FC<LoaderProps> = ({ micro }) => {\n  return (\n    <div className=\"flex items-center justify-center px-2\">\n      <svg\n        className={\n          micro\n            ? 'animate-spin mr-2 h-4 w-4 text-white'\n            : 'animate-spin mr-2 h-7 w-7 text-white'\n        }\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n      >\n        <circle\n          className=\"opacity-25\"\n          cx=\"12\"\n          cy=\"12\"\n          r=\"10\"\n          stroke=\"currentColor\"\n          strokeWidth=\"4\"\n        ></circle>\n        <path\n          className=\"opacity-75\"\n          fill=\"currentColor\"\n          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n        ></path>\n      </svg>\n      Loading...\n    </div>\n  )\n}\n","import { StatPeriod } from '../../../../types'\n\ninterface StatsPeriodSwitchProps {\n  onClickSwitchPeriodField: () => void\n  currentPeriod: StatPeriod\n}\n\nexport const StatsPeriodSwitch: React.FC<StatsPeriodSwitchProps> = ({\n  onClickSwitchPeriodField,\n  currentPeriod,\n}) => {\n  return (\n    <button\n      className=\"mx-auto flex items-center focus:outline-none relative transition-colors hover:text-gray-300\"\n      onClick={onClickSwitchPeriodField}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        className=\"absolute -left-7 h-6 w-6\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\"\n      >\n        <path\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth={2}\n          d=\"M8 7h12m0 0l-4-4m4 4l-4 4m0 6H4m0 0l4 4m-4-4l4-4\"\n        />\n      </svg>\n      <p className=\"ml-1 capitalize transition-colors hover:text-gray-300\">{currentPeriod.name}</p>\n    </button>\n  )\n}\n","import React, { useContext } from 'react'\nimport { DASHBOARD_EXAMPLE_HASHRATE } from '../../../../utils/constants'\nimport { DashboardContext } from '../../Dashboard'\nimport { EthereumSVG } from '../../../svgs/Ethereum'\nimport { Hint } from '../../../ui/Hint'\nimport { Loader } from '../../../ui/Loader'\nimport { StatsPeriodSwitch } from './StatsPeriodSwitch'\n\ninterface StatsDashboardProps {\n  onClickSwitchPeriodField: () => void\n}\n\nexport const StatsDashboard: React.FC<StatsDashboardProps> = ({\n  onClickSwitchPeriodField,\n}) => {\n  const { dashboardState } = useContext(DashboardContext)\n\n  return (\n    <div className=\"flex-1 rounded-2xl pb-8 md:pb-16 pt-6 md:pt-10 px-8 bg-gray-700 transition hover:bg-opacity-90\">\n      <div className=\"flex justify-between items-start md:mb-6\">\n        <div className=\"flex items-center opacity-50 select-none\">\n          <EthereumSVG />\n          Ethereum\n        </div>\n        <Hint hintText=\"Information provided by HiveOn Pool\" />\n      </div>\n      <div className=\"text-xl md:text-3xl block md:flex items-center justify-around md:space-x-4\">\n        <div className=\"text-center gap-4\">\n          <StatsPeriodSwitch\n            onClickSwitchPeriodField={onClickSwitchPeriodField}\n            currentPeriod={dashboardState.period}\n          />\n          earnings per\n          <div className=\"text-gray-300\">{DASHBOARD_EXAMPLE_HASHRATE} MH/s</div>\n        </div>\n        <div className=\"mt-2 md:m-0 text-center\">\n          {dashboardState.isLoading ? (\n            <Loader />\n          ) : (\n            <div>\n              {dashboardState.calculatedEarning && (\n                <div className=\"text-4xl md:text-7xl\">\n                  ${dashboardState.calculatedEarning.toFixed(2)}\n                </div>\n              )}\n              {dashboardState.earningsInfo && (\n                <div className=\"text-base md:text-lg text-gray-300\">\n                  {dashboardState.earningsInfo.expectedReward24H.toFixed(5)} ETH\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const isMobile: boolean = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent)","export const AMD = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-14 w-14 text-red-500\"\n      viewBox=\"0 0 192.756 192.756\"\n      fill=\"currentColor\"\n    >\n      <g fillRule=\"evenodd\" clipRule=\"evenodd\">\n        <path d=\"M72.194 173.336H61.725l-3.203-7.723H41.075l-2.917 7.723H27.86l15.731-39.014h11.27l17.333 39.014zm-22.824-29.69l-5.721 15.158h12.013l-6.292-15.158zm60.851-9.324h8.467v39.014h-9.725v-24.371l-10.525 12.244H96.95l-10.526-12.244v24.371H76.7v-39.014h8.466l12.527 14.473 12.528-14.473zm33.109 0c14.244 0 21.566 8.867 21.566 19.564 0 11.211-7.094 19.449-22.652 19.449h-16.133v-39.014h17.219v.001zm-7.494 31.864h6.35c9.783 0 12.699-6.637 12.699-12.355 0-6.693-3.604-12.357-12.812-12.357h-6.236v24.712h-.001zm-19.381-120.76H74.063l-26.1-25.887 94.853-.118v94.64L116.455 87.58V45.426zM74.396 88.411l-.214-38.236-26.836 26.836v37.762h38.829l26.362-26.362H74.396z\" />\n      </g>\n    </svg>\n  )\n}\n","export const Nvidia = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-14 w-14 text-green-500\"\n      viewBox=\"-29.998 -38.707 259.981 232.24\"\n      fill=\"currentColor\"\n    >\n      <g fillRule=\"evenodd\" fill=\"none\">\n        <path\n          fill=\"currentColor\"\n          d=\"M83.166 117.393l.004 37.434h10.57v-37.433H83.166zM0 117.343v37.484h10.666v-28.463l8.263.003c2.737 0 4.686.681 6.005 2.088 1.673 1.782 2.355 4.655 2.355 9.912v16.46h10.334v-20.71c0-14.781-9.422-16.775-18.64-16.775H0zm100.188.051v37.433h17.148c9.136 0 12.117-1.52 15.342-4.926 2.28-2.392 3.753-7.642 3.753-13.379 0-5.261-1.247-9.956-3.422-12.879-3.917-5.227-9.56-6.249-17.983-6.249zm10.487 8.15h4.546c6.594 0 10.86 2.962 10.86 10.646 0 7.686-4.266 10.647-10.86 10.647h-4.546v-21.292zm-42.752-8.15L59.1 147.062l-8.455-29.666-11.412-.002 12.074 37.433h15.238l12.169-37.433h-10.79zm73.427 37.433h10.574v-37.43l-10.576-.003zm29.637-37.42l-14.763 37.407h10.425l2.336-6.612h17.47l2.21 6.612h11.32l-14.876-37.41-14.122.004zm6.863 6.825l6.404 17.524h-13.01z\"\n        />\n        <path\n          fill=\"currentColor\"\n          d=\"M69.189 29.708v-8.993a67.728 67.728 0 012.653-.136c24.596-.773 40.733 21.134 40.733 21.134S95.147 65.919 76.46 65.919c-2.692 0-5.1-.433-7.271-1.162v-27.27c9.575 1.156 11.5 5.386 17.258 14.982L99.25 41.674s-9.345-12.258-25.1-12.258c-1.715 0-3.353.12-4.961.292zm0-29.707v13.433c.882-.07 1.766-.126 2.653-.158 34.205-1.152 56.489 28.052 56.489 28.052s-25.597 31.124-52.262 31.124c-2.443 0-4.73-.225-6.88-.606v8.303c1.838.234 3.742.372 5.73.372 24.815 0 42.76-12.672 60.138-27.671 2.879 2.307 14.675 7.919 17.1 10.378-16.523 13.832-55.028 24.98-76.857 24.98a63.43 63.43 0 01-6.111-.318v11.67h94.316V0H69.19zm0 64.756v7.09c-22.952-4.093-29.322-27.95-29.322-27.95s11.02-12.21 29.322-14.189v7.779c-.014 0-.024-.004-.036-.004-9.604-1.154-17.108 7.82-17.108 7.82s4.204 15.106 17.144 19.454zM28.425 42.862s13.602-20.073 40.764-22.148v-7.28c-30.084 2.414-56.136 27.893-56.136 27.893S27.807 83.985 69.19 87.89v-7.74c-30.368-3.822-40.765-37.288-40.765-37.288z\"\n        />\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\nimport { DeviceInfo } from '../../../../types'\nimport { AMD } from '../../../svgs/AMD'\nimport { Nvidia } from '../../../svgs/Nvidia'\n\ninterface DeviceSelectorProps {\n  deviceList: DeviceInfo[]\n  onClickSelectorItem: (device: DeviceInfo) => void\n}\n\nconst VendorIcon: React.FC = ({ children }) => {\n  return children === 'NVIDIA' ? <Nvidia /> : <AMD />\n}\n\nexport const DeviceSelector: React.FC<DeviceSelectorProps> = ({\n  deviceList,\n  onClickSelectorItem,\n}) => {\n  return (\n    <div className=\"absolute rounded bg-gray-600 max-h-72 -mx-5 py-5 inset-x-0 -bottom-13 z-10 text-base overflow-auto\">\n      {deviceList.map((device) => (\n        <button\n          className=\"flex items-center w-full px-5 transition-colors hover:bg-gray-500\"\n          key={device.name + Number(device.isLHR)}\n          onClick={() => onClickSelectorItem(device)}\n        >\n          <VendorIcon>{device.vendor}</VendorIcon>\n          <div className=\"flex items-center w-44\">\n            <div className=\"ml-2\">{device.name}</div>\n            {device.isLHR && (\n              <div className=\"text-black text-xs bg-gray-300 px-1 ml-1\">\n                LHR\n              </div>\n            )}\n          </div>\n          <div className=\"ml-2\">{device.hashrate} MH/s</div>\n        </button>\n      ))}\n    </div>\n  )\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport { SubmitHandler, useForm } from 'react-hook-form'\nimport { DeviceInfo, userEarningInfoInput } from '../../../../types'\nimport { isMobile } from '../../../../utils'\nimport { DEVICE_LIST } from '../../../../utils/constants'\nimport { useOnClickOutside } from '../../../../utils/hooks/useOnClickOutside'\nimport { DeviceSelector } from './DeviceSelector'\n\ninterface AddRecordFormProps {\n  changeView: () => void\n  onAddNewRecord: (record: userEarningInfoInput) => void\n}\n\ninterface FormValues {\n  name: string\n  hashrate: number\n}\n\nconst filterDeviceByName = (name: string): DeviceInfo[] => {\n  return DEVICE_LIST.filter((device) =>\n    new RegExp(name, 'i').test(device.name.toLowerCase())\n  )\n}\n\nconst validateHashrate = (hashrate: number | string): boolean =>\n  /^[0-9]+$/.test(String(hashrate))\n\nexport const AddRecordForm: React.FC<AddRecordFormProps> = ({\n  changeView,\n  onAddNewRecord,\n}) => {\n  const [isVisibleDeviceSelector, setIsVisibleDeviceSelector] = useState(false)\n  const [deviceList, setDeviceList] = useState<DeviceInfo[]>(DEVICE_LIST)\n  const {\n    register,\n    handleSubmit,\n    watch,\n    setValue,\n    setFocus,\n    formState: { errors },\n  } = useForm<FormValues>({\n    mode: 'onSubmit',\n  })\n  const { name } = watch()\n  const inputNameRef = useRef<HTMLInputElement | null>(null)\n  const { ref, ...rest } = register('name', {\n    maxLength: 17,\n  })\n\n  useOnClickOutside(inputNameRef, () => setIsVisibleDeviceSelector(false))\n\n  useEffect(() => {\n    setFocus('name')\n  }, [setFocus])\n\n  useEffect(() => {\n    setDeviceList(filterDeviceByName(name))\n  }, [name])\n\n  const onClickSelectorItem = (device: DeviceInfo) => {\n    setValue('hashrate', device.hashrate)\n    setValue('name', device.name)\n    setIsVisibleDeviceSelector(false)\n  }\n\n  const onSubmit: SubmitHandler<FormValues> = (data: userEarningInfoInput) => {\n    onAddNewRecord(data)\n    changeView()\n  }\n\n  const scrollIntoInput = () => {\n    isMobile && inputNameRef.current?.scrollIntoView()\n  }\n\n  return (\n    <div>\n      <div className=\"flex justify-end\">\n        <button\n          className=\"cursor-pointer text-lg flex items-center opacity-50 transition-opacity hover:opacity-75\"\n          onClick={() => changeView()}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-4 w-4 mr-2\"\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M7.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l2.293 2.293a1 1 0 010 1.414z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n          Back\n        </button>\n      </div>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"relative\">\n          <input\n            className={\n              errors?.name ? 'w-full mb-3 py-2 input-warn' : 'w-full mb-3 py-2'\n            }\n            type=\"text\"\n            placeholder=\"Name\"\n            //share ref usage https://react-hook-form.com/faqs#Howtosharerefusage\n            {...rest}\n            name=\"name\"\n            ref={(e) => {\n              ref(e)\n              inputNameRef.current = e\n            }}\n            onClick={() => scrollIntoInput()}\n            onFocus={() => {\n              setIsVisibleDeviceSelector(true)\n              scrollIntoInput()\n            }}\n          />\n          {isVisibleDeviceSelector && deviceList.length > 0 && (\n            <DeviceSelector\n              deviceList={deviceList}\n              onClickSelectorItem={onClickSelectorItem}\n            />\n          )}\n        </div>\n        <div className=\"relative items-center\">\n          <input\n            className={\n              errors?.hashrate\n                ? 'w-full mb-3 py-2 input-warn'\n                : 'w-full mb-3 py-2'\n            }\n            {...register('hashrate', {\n              validate: (value) => validateHashrate(value),\n            })}\n            onFocus={() => setIsVisibleDeviceSelector(false)}\n            type=\"number\"\n            defaultValue=\"100\"\n            placeholder=\"Hashrate\"\n          />\n          <span className=\"absolute top-2 right-0\">MH/s</span>\n        </div>\n        <div className=\"flex justify-end\">\n          <button\n            className=\"opacity-50 transition-opacity hover:opacity-75\"\n            disabled={!Boolean(errors)}\n            onClick={handleSubmit(onSubmit)}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-10 w-10\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={1.3}\n                d=\"M13 9l3 3m0 0l-3 3m3-3H8m13 0a9 9 0 11-18 0 9 9 0 0118 0z\"\n              />\n            </svg>\n          </button>\n        </div>\n      </form>\n    </div>\n  )\n}\n","import { RefObject, useEffect } from 'react'\n\ntype AnyEvent = MouseEvent | TouchEvent\n\nexport const useOnClickOutside = <T extends HTMLElement = HTMLElement>(\n  ref: RefObject<T>,\n  handler: (event: AnyEvent) => void\n): void => {\n  useEffect(() => {\n    const listener = (event: AnyEvent) => {\n      const el = ref?.current\n\n      // Do nothing if clicking ref's element or descendent elements\n      if (!el || el.contains(event.target as Node)) {\n        return\n      }\n\n      handler(event)\n    }\n\n    document.addEventListener(`click`, listener)\n\n    return () => {\n      document.removeEventListener(`click`, listener)\n    }\n\n    // Reload only if ref or handler changes\n  }, [ref, handler])\n}\n","import { Transition } from '@headlessui/react'\nimport React, { useContext, useState } from 'react'\nimport { userEarningInfo, userEarningInfoInput } from '../../../../types'\nimport {\n  calcArrayOfCryptoEarnings,\n  generateUUID,\n} from '../../../../utils/calculation'\nimport { Loader } from '../../../ui/Loader'\nimport { AddRecordForm } from './AddRecordForm'\nimport { DashboardContext } from '../../Dashboard'\n\nexport const UserStatsDashboard: React.FC = () => {\n  const { dashboardState, userData, setUserData } = useContext(DashboardContext)\n  const [isFormActive, setIsFormActive] = useState(false)\n\n  const onClickChangeViewButton = () => {\n    setIsFormActive(!isFormActive)\n  }\n\n  const onAddNewRecord = (newRecord: userEarningInfoInput) => {\n    let storedData: userEarningInfo[] = userData\n    const data: userEarningInfo = {\n      name:\n        newRecord.name !== '' ? newRecord.name : `Rig #${storedData.length}`,\n      hashrate: newRecord.hashrate ?? 1,\n      quantity: 1,\n      uuid: generateUUID(),\n    }\n    storedData.push(data)\n    setUserData(storedData as [])\n  }\n\n  let calculatedEarnings\n  if (dashboardState.currentEthRate && dashboardState.earningsInfo) {\n    calculatedEarnings = calcArrayOfCryptoEarnings(\n      userData,\n      dashboardState.currentEthRate,\n      dashboardState.earningsInfo.expectedReward24H,\n      dashboardState.period.value\n    )\n  }\n\n  return (\n    <div className=\"flex-1 rounded-2xl text-xl pb-8 md:pb-12 lg:pb-4 pt-6 md:pt-10 px-8 bg-gray-700 transition hover:bg-opacity-90\">\n      {isFormActive ? (\n        <Transition\n          show={isFormActive}\n          appear={true}\n          enter=\"transition-opacity duration-75\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"transition-opacity duration-150\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <AddRecordForm\n            changeView={onClickChangeViewButton}\n            onAddNewRecord={onAddNewRecord}\n          />\n        </Transition>\n      ) : (\n        <div>\n          {userData.length > 0 ? (\n            <div>\n              <div className=\"flex justify-between\">\n                <p className=\"text-center opacity-50 select-none\">Summary</p>\n                <button\n                  className=\"cursor-pointer text-lg flex items-center opacity-50 transition-opacity hover:opacity-75\"\n                  onClick={() => onClickChangeViewButton()}\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"h-5 w-5 mr-2\"\n                    viewBox=\"0 0 20 20\"\n                    fill=\"currentColor\"\n                  >\n                    <path\n                      fillRule=\"evenodd\"\n                      d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z\"\n                      clipRule=\"evenodd\"\n                    />\n                  </svg>\n                  Add\n                </button>\n              </div>\n\n              {dashboardState.isLoading ? (\n                <div className=\"text-xl md:text-3xl py-8 md:py-14\">\n                  <Loader />\n                </div>\n              ) : (\n                calculatedEarnings && (\n                  <div className=\"text-center\">\n                    <p className=\"text-gray-300 mb-2\">\n                      {calculatedEarnings.hashrate\n                        .toFixed(2)\n                        .replace(/\\.00$/, '')}{' '}\n                      MH/s\n                    </p>\n                    <p className=\"text-4xl md:text-7xl\">\n                      ${calculatedEarnings.earningsUsdt.toFixed(2)}\n                    </p>\n                    <p className=\"text-base md:text-lg text-gray-300\">\n                      {calculatedEarnings.earningsEth.toFixed(5)} ETH\n                    </p>\n                  </div>\n                )\n              )}\n            </div>\n          ) : (\n            <button\n              className=\"flex flex-col mx-auto items-center text-center\"\n              onClick={() => onClickChangeViewButton()}\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-1/4 w-1/4 mb-4\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"\n                />\n              </svg>\n              Add your equipment for tracking earnings\n            </button>\n          )}\n        </div>\n      )}\n    </div>\n  )\n}\n","export const Export = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-5 w-5\"\n      viewBox=\"0 0 67.671 67.671\"\n      fill=\"currentColor\"\n    >\n      <path d=\"M52.946 23.348H42.834v6h10.112c3.007 0 5.34 1.536 5.34 2.858v26.606c0 1.322-2.333 2.858-5.34 2.858H14.724c-3.007 0-5.34-1.536-5.34-2.858V32.207c0-1.322 2.333-2.858 5.34-2.858h10.11v-6h-10.11c-6.359 0-11.34 3.891-11.34 8.858v26.606c0 4.968 4.981 8.858 11.34 8.858h38.223c6.358 0 11.34-3.891 11.34-8.858V32.207c-.001-4.968-4.982-8.859-11.341-8.859z\" />\n      <path d=\"M24.957 14.955a2.99 2.99 0 002.121-.879l3.756-3.756v30.522a3 3 0 106 0V10.117l3.959 3.959c.586.586 1.354.879 2.121.879s1.535-.293 2.121-.879a2.998 2.998 0 000-4.242L36.078.877A2.987 2.987 0 0033.958 0h-.046c-.767 0-1.534.291-2.12.877l-8.957 8.957a2.998 2.998 0 002.122 5.121z\" />\n    </svg>\n  )\n}\n","export const Import = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-5 w-5\"\n      viewBox=\"0 0 60.903 60.903\"\n      fill=\"currentColor\"\n    >\n      <path d=\"M49.561 16.464H39.45v6h10.111c3.008 0 5.341 1.535 5.341 2.857v26.607c0 1.321-2.333 2.858-5.341 2.858H11.34c-3.007 0-5.34-1.537-5.34-2.858V25.324c0-1.322 2.333-2.858 5.34-2.858h10.11v-6H11.34C4.981 16.466 0 20.357 0 25.324v26.605c0 4.968 4.981 8.857 11.34 8.857h38.223c6.357 0 11.34-3.891 11.34-8.857V25.324c-.001-4.969-4.982-8.86-11.342-8.86z\" />\n      <path d=\"M39.529 29.004a2.99 2.99 0 00-2.121.88l-3.756 3.755V3.117a3 3 0 00-6 0v30.724l-3.959-3.958a2.992 2.992 0 00-4.242 0 2.997 2.997 0 000 4.241l8.957 8.957a2.988 2.988 0 002.12.877h.045c.768 0 1.534-.291 2.12-.877l8.957-8.957a2.997 2.997 0 00-2.121-5.12z\" />\n    </svg>\n  )\n}\n","import { Transition } from '@headlessui/react'\nimport dayjs from 'dayjs'\nimport React, { useContext } from 'react'\nimport ReactTooltip from 'react-tooltip'\nimport { isMobile } from '../../utils'\nimport { Export } from '../svgs/Export'\nimport { Import } from '../svgs/Import'\nimport { DashboardContext } from './Dashboard'\n\ninterface HeaderProps {\n  onClickLastUpdateLabel: () => void\n  onClickImportButton: () => void\n  onClickExportButton: () => void\n}\n\nexport const Header: React.FC<HeaderProps> = ({\n  onClickLastUpdateLabel,\n  onClickImportButton,\n  onClickExportButton,\n}) => {\n  const { dashboardState, userData } = useContext(DashboardContext)\n\n  return (\n    <section className=\"flex mt-8 mb-12 h-8 items-center justify-between\">\n      <div className=\"flex flex-col md:flex-row md:space-x-2 space-y-3 md:space-y-0\">\n        <div\n          onClick={() => onClickLastUpdateLabel()}\n          className=\"flex items-center text-gray-400 hover:underline cursor-pointer\"\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-6 w-6 mr-1\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n            />\n          </svg>\n          Last update:\n          {dashboardState.isLoading ? (\n            <div className=\"ml-1 bg-gray-500 rounded animate-pulse w-10 h-4\"></div>\n          ) : (\n            <span className=\"ml-1 text-white\">{dayjs().format('HH:mm')}</span>\n          )}\n        </div>\n        <div className=\"flex items-center text-gray-400\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-6 w-6 mr-1\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M16 8v8m-4-5v5m-4-2v2m-2 4h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\"\n            />\n          </svg>\n          ETH/USDT Rate:\n          {dashboardState.isLoading ? (\n            <div className=\"ml-1 bg-gray-500 rounded animate-pulse w-16 h-4\"></div>\n          ) : (\n            <span className=\"ml-1 text-white\">\n              ${dashboardState.currentEthRate?.toFixed(2) ?? 'Fetch error'}\n            </span>\n          )}\n        </div>\n      </div>\n      <div className=\"flex space-x-2\">\n        <Transition\n          as=\"button\"\n          aria-label=\"Export data\"\n          className=\"transition-colors text-gray-500 hover:text-gray-300 focus:outline-none\"\n          show={userData.length > 0}\n          enter=\"transition-opacity duration-75\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"transition-opacity duration-150\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n          data-tip\n          data-for=\"export-icon\"\n          onClick={onClickExportButton}\n        >\n          <Export />\n          <ReactTooltip\n            disable={isMobile}\n            id=\"export-icon\"\n            type=\"light\"\n            effect=\"solid\"\n          >\n            <span className=\"text-gray-800 text-center\">Export</span>\n          </ReactTooltip>\n        </Transition>\n        <button\n          className=\"cursor-pointer transition-colors text-gray-500 hover:text-gray-300 focus:outline-none\"\n          aria-label=\"Import data\"\n          data-tip\n          data-for=\"import-icon\"\n          onClick={onClickImportButton}\n        >\n          <Import />\n          <ReactTooltip\n            disable={isMobile}\n            id=\"import-icon\"\n            type=\"light\"\n            effect=\"solid\"\n          >\n            <span className=\"text-gray-800 text-center\">Import</span>\n          </ReactTooltip>\n        </button>\n      </div>\n    </section>\n  )\n}\n","export const Copy = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-6 w-6\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={2}\n        d=\"M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3\"\n      />\n    </svg>\n  )\n}\n","export const XMark = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-5 w-5\"\n      viewBox=\"0 0 20 20\"\n      fill=\"currentColor\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  )\n}\n","import React, { useContext, useRef } from 'react'\nimport { Copy } from '../../svgs/Copy'\nimport { XMark } from '../../svgs/XMark'\nimport { DashboardContext } from '../Dashboard'\n\ninterface ExportBlockProps {\n  onClickCloseModalButton: () => void\n}\n\nexport const ExportBlock: React.FC<ExportBlockProps> = ({\n  onClickCloseModalButton,\n}) => {\n  const { userData } = useContext(DashboardContext)\n\n  const textInput = useRef<HTMLInputElement>(null)\n\n  const onClickModalCopyButton = () => {\n    if (textInput) {\n      navigator.clipboard.writeText(textInput.current?.value || '[]')\n      onClickCloseModalButton()\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"flex justify-end mb-2 text-gray-500 hover:text-black transition-colors\">\n        <button onClick={onClickCloseModalButton} title=\"Close\">\n          <XMark />\n        </button>\n      </div>\n      <p className=\"text-black text-xl text-center my-2\">Export data</p>\n      <p className=\"text-black text-sm text-center my-2\">\n        Click the copy button below to save your data and use it to import to\n        another device\n      </p>\n      <div className=\"relative items-center\">\n        <input\n          ref={textInput}\n          className=\"bg-white text-black w-full border rounded pr-10 py-2 pl-2\"\n          type=\"text\"\n          readOnly\n          defaultValue={JSON.stringify(userData)}\n        />\n        <button\n          className=\"absolute z-10 top-2 right-2 text-gray-500 hover:text-black transition-colors\"\n          onClick={onClickModalCopyButton}\n          aria-label=\"Copy to clipboard\"\n          title=\"Copy\"\n        >\n          <Copy />\n        </button>\n      </div>\n    </div>\n  )\n}\n","import React, { useContext } from 'react'\nimport { SubmitHandler, useForm } from 'react-hook-form'\nimport { userEarningInfo } from '../../../types'\nimport { XMark } from '../../svgs/XMark'\nimport { DashboardContext } from '../Dashboard'\n\ninterface ImportBlockProps {\n  onClickCloseModalButton: () => void\n}\n\ninterface FormValues {\n  exportPhrase: string\n}\n\nexport const ImportBlock: React.FC<ImportBlockProps> = ({\n  onClickCloseModalButton,\n}) => {\n  const { setUserData } = useContext(DashboardContext)\n  const {\n    register,\n    handleSubmit,\n    setError,\n    formState: { errors },\n  } = useForm<FormValues>({\n    mode: 'onSubmit',\n  })\n\n  const onSubmit: SubmitHandler<FormValues> = (formData) => {\n    try {\n      const parsedFormData: userEarningInfo = JSON.parse(formData.exportPhrase)\n      setUserData(parsedFormData)\n      onClickCloseModalButton()\n    } catch (error) {\n      setError('exportPhrase', {\n        type: 'manual',\n        message: 'Incorrect export phrase',\n      })\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"flex justify-end mb-2 text-gray-500 hover:text-black transition-colors\">\n        <button onClick={onClickCloseModalButton} title=\"Close\">\n          <XMark />\n        </button>\n      </div>\n      <p className=\"text-black text-xl text-center my-2\">Import data</p>\n      <p className=\"text-black text-sm text-center my-2\">\n        Paste saved string into the text field below to import your data\n      </p>\n      <form className=\"items-center\" onSubmit={handleSubmit(onSubmit)}>\n        <input\n          className=\"bg-white text-black w-full border rounded p-2\"\n          type=\"text\"\n          {...register('exportPhrase')}\n        />\n        {errors?.exportPhrase && (\n          <p className=\"text-red-600\">{errors.exportPhrase.message}</p>\n        )}\n        <button\n          className=\"w-full rounded text-center mt-2 py-2 px-4 text-black hover:bg-gray-600 hover:text-white transition-colors\"\n          aria-label=\"Import data\"\n        >\n          Import\n        </button>\n      </form>\n    </div>\n  )\n}\n","export const Trashcan = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-5 w-5\"\n      viewBox=\"0 0 20 20\"\n      fill=\"currentColor\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  )\n}\n","import React, { useContext } from 'react'\nimport { userEarningInfo } from '../../types'\nimport { calcCryptoEarning } from '../../utils/calculation'\nimport { DashboardContext } from './Dashboard'\nimport { Trashcan } from '../svgs/Trashcan'\n\nexport const UserEquipment: React.FC = () => {\n  const { dashboardState, userData, setUserData } = useContext(DashboardContext)\n\n  const onClickDeleteButton = (recordUUID: string) => {\n    const storedData: userEarningInfo[] = userData\n    setUserData(storedData.filter((record) => record.uuid !== recordUUID) as [])\n  }\n\n  const getCalculatedEarningInUSDT = (hashrate: number) => {\n    if (dashboardState.currentEthRate && dashboardState.earningsInfo) {\n      return calcCryptoEarning(\n        dashboardState.currentEthRate,\n        dashboardState.earningsInfo.expectedReward24H,\n        hashrate,\n        dashboardState.period.value\n      ).toFixed(2)\n    }\n  }\n\n  const getCalculatedEarningInETH = (hashrate: number) => {\n    if (dashboardState.earningsInfo) {\n      return (\n        (dashboardState.earningsInfo.expectedReward24H / 100) *\n        hashrate\n      ).toFixed(5)\n    }\n  }\n\n  return (\n    <div className=\"mt-8 mb-6\">\n      {!dashboardState.isLoading && userData.length > 0 ? (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 grid-flow-row gap-4 md:gap-6\">\n          {userData\n            .sort((a: userEarningInfo, b: userEarningInfo) => {\n              if (+a.hashrate < +b.hashrate) return 1\n              if (+a.hashrate > +b.hashrate) return -1\n              return 0\n            })\n            .map((device: userEarningInfo) => (\n              <div\n                className=\"py-3 px-4 bg-gray-700 rounded hover:opacity-90\"\n                key={device.uuid}\n              >\n                  <div className=\"flex justify-between items-center opacity-50\">\n                    {device.name} - {device.hashrate} MH/s\n                    <button\n                      onClick={() => onClickDeleteButton(device.uuid)}\n                      aria-label=\"Delete record\"\n                    >\n                      <Trashcan />\n                    </button>\n                  </div>\n                  <div>\n                    <p>${getCalculatedEarningInUSDT(device.hashrate)}</p>\n                    <p>{getCalculatedEarningInETH(device.hashrate)} ETH</p>\n                  </div>\n              </div>\n            ))}\n        </div>\n      ) : null}\n    </div>\n  )\n}\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport {\n  earningsInfo,\n  SetValue,\n  StatPeriod,\n  userEarningInfo,\n} from '../../types'\nimport { getCurrentEthEarningsInfo } from '../../utils/API'\nimport { calcCryptoEarning } from '../../utils/calculation'\nimport {\n  DASHBOARD_EXAMPLE_HASHRATE,\n  DEFAULT_STAT_PERIOD,\n  STAT_PERIODS,\n} from '../../utils/constants'\nimport { useLocalStorage } from '../../utils/hooks/useLocalStorage'\nimport { Modal } from '../ui/Modal'\nimport { StatsDashboard } from './dashboardBlocks/StatsDashboardBlock/StatsDashboardBlock'\nimport { UserStatsDashboard } from './dashboardBlocks/UserStatsDashboardBlock/UserStatsDashboardBlock'\nimport { Header } from './Header'\nimport { ExportBlock } from './modalBlocks/ExportBlock'\nimport { ImportBlock } from './modalBlocks/ImportBlock'\nimport { UserEquipment } from './UserEquipment'\n\ninterface DashboardState {\n  isLoading: boolean\n  period: StatPeriod\n  calculatedEarning: number | undefined\n  currentEthRate: number | undefined\n  earningsInfo: earningsInfo | undefined\n}\n\ninterface DashboardContextProps {\n  dashboardState: DashboardState\n  userData: userEarningInfo[]\n  setUserData: SetValue<any>\n}\n\ninterface ModalState {\n  isShowing: boolean\n  mode: modalStateMode\n}\n\ntype modalStateMode = 'import' | 'export'\n\nexport const DashboardContext = createContext({} as DashboardContextProps)\n\nconst initialDashboardState = {\n  isLoading: true,\n  period: DEFAULT_STAT_PERIOD,\n  currentEthRate: undefined,\n  earningsInfo: undefined,\n  calculatedEarning: undefined,\n}\n\nexport const Dashboard: React.FC = () => {\n  const [userData, setUserData] = useLocalStorage<userEarningInfo[]>(\n    'crypto',\n    []\n  )\n  const [dashboardState, setDashboardState] = useState<DashboardState>(\n    initialDashboardState\n  )\n  const [modalState, setModalState] = useState<ModalState>({\n    isShowing: false,\n    mode: 'import',\n  })\n\n  const fetchData = useCallback(async () => {\n    setDashboardState((prevState) => ({ ...prevState, isLoading: true }))\n    const earningsInfo = await getCurrentEthEarningsInfo()\n    setDashboardState((prevState) => ({\n      isLoading: false,\n      currentEthRate: earningsInfo.exchangeRate,\n      earningsInfo: earningsInfo,\n      period: prevState.period,\n      calculatedEarning: calcCryptoEarning(\n        earningsInfo.exchangeRate,\n        earningsInfo.expectedReward24H,\n        DASHBOARD_EXAMPLE_HASHRATE,\n        prevState.period.value\n      ),\n    }))\n  }, [])\n\n  const onClickImportButton = () => {\n    setModalState({ isShowing: true, mode: 'import' })\n  }\n\n  const onClickExportButton = () => {\n    setModalState({ isShowing: true, mode: 'export' })\n  }\n\n  const onClickCloseModalButton = () => {\n    setModalState({ isShowing: false, mode: modalState.mode })\n  }\n\n  const onClickSwitchPeriodField = () => {\n    const currentPeriodIndex = STAT_PERIODS.findIndex(\n      (item) => item.name === dashboardState.period.name\n    )\n    const nextPeriodIndex =\n      currentPeriodIndex >= STAT_PERIODS.length - 1 ? 0 : currentPeriodIndex + 1\n\n    setDashboardState((prevState) => ({\n      ...prevState,\n      period: STAT_PERIODS[nextPeriodIndex],\n      calculatedEarning: calcCryptoEarning(\n        prevState?.currentEthRate ?? 1,\n        prevState?.earningsInfo?.expectedReward24H ?? 1,\n        DASHBOARD_EXAMPLE_HASHRATE,\n        STAT_PERIODS[nextPeriodIndex].value\n      ),\n    }))\n  }\n\n  useEffect(() => {\n    fetchData()\n  }, [fetchData])\n\n  return (\n    <DashboardContext.Provider\n      value={{ dashboardState, userData, setUserData }}\n    >\n      <Header\n        onClickLastUpdateLabel={fetchData}\n        onClickImportButton={onClickImportButton}\n        onClickExportButton={onClickExportButton}\n      />\n      <div className=\"block lg:flex max-w-7xl space-x-0 lg:space-x-6 space-y-6 lg:space-y-0 justify-around mx-auto\">\n        <StatsDashboard onClickSwitchPeriodField={onClickSwitchPeriodField} />\n        <UserStatsDashboard />\n      </div>\n      <UserEquipment />\n      <Modal isShowing={modalState.isShowing}>\n        {modalState.mode === 'export' && (\n          <ExportBlock onClickCloseModalButton={onClickCloseModalButton} />\n        )}\n        {modalState.mode === 'import' && (\n          <ImportBlock onClickCloseModalButton={onClickCloseModalButton} />\n        )}\n      </Modal>\n    </DashboardContext.Provider>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport { SetValue } from '../../types'\n\nexport function useLocalStorage<T>(\n  key: string,\n  initialValue: T\n): [T, SetValue<T>] {\n  const readValue = (): T => {\n    if (typeof window === 'undefined') {\n      return initialValue\n    }\n\n    try {\n      const item = window.localStorage.getItem(key)\n      return item ? (JSON.parse(item) as T) : initialValue\n    } catch (error) {\n      console.warn(`Error reading localStorage key \"${key}\":`, error)\n      return initialValue\n    }\n  }\n\n  const [storedValue, setStoredValue] = useState<T>(readValue)\n\n  const setValue: SetValue<T> = (value) => {\n    if (typeof window == 'undefined') {\n      console.warn(\n        `Tried setting localStorage key \"${key}\" even though environment is not a client`\n      )\n    }\n\n    try {\n      const newValue = value instanceof Function ? value(storedValue) : value\n\n      window.localStorage.setItem(key, JSON.stringify(newValue))\n      setStoredValue(newValue)\n      window.dispatchEvent(new Event('local-storage'))\n    } catch (error) {\n      console.warn(`Error setting localStorage key “${key}”:`, error)\n    }\n  }\n\n  useEffect(() => {\n    setStoredValue(readValue())\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    const handleStorageChange = () => {\n      setStoredValue(readValue())\n    }\n\n    window.addEventListener('storage', handleStorageChange)\n    window.addEventListener('local-storage', handleStorageChange)\n\n    return () => {\n      window.removeEventListener('storage', handleStorageChange)\n      window.removeEventListener('local-storage', handleStorageChange)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return [storedValue, setValue]\n}\n","import dayjs from 'dayjs'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { Transition } from '@headlessui/react'\nimport { earningsInfo } from '../types'\nimport { getEthEarningsInfo as getEarningsInfo } from '../utils/API'\nimport { calcCryptoEarning } from '../utils/calculation'\nimport { Loader } from './ui/Loader'\nimport { MAX_ITEMS_IN_REWARDS_HISTORY_TABLE } from '../utils/constants'\n\nexport const RewardsHistoryTable: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [isShowing, setIsShowing] = useState(true)\n  const [rewardsCount, setRewardsCount] = useState(10)\n  const [rewardsList, setRewardsList] = useState<earningsInfo[]>()\n\n  const fetchData = useCallback(async () => {\n    setRewardsList(await getEarningsInfo(rewardsCount))\n    setIsLoading(false)\n  }, [rewardsCount])\n\n  useEffect(() => {\n    fetchData()\n  }, [fetchData])\n\n  const onClickShowMoreButton = () => {\n    if (rewardsCount <= MAX_ITEMS_IN_REWARDS_HISTORY_TABLE) {\n      setRewardsCount(rewardsCount + 10)\n    }\n  }\n\n  return (\n    <div>\n      <h1\n        className=\"flex justify-center items-center text-4xl font-bold group cursor-pointer\"\n        onClick={() => setIsShowing(!isShowing)}\n        role=\"button\"\n      >\n        Rewards History\n        <div className=\"text-gray-600 group-hover:text-gray-300 transition-colors ml-2\">\n          {isShowing ? (\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-6 w-6\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M3.707 2.293a1 1 0 00-1.414 1.414l14 14a1 1 0 001.414-1.414l-1.473-1.473A10.014 10.014 0 0019.542 10C18.268 5.943 14.478 3 10 3a9.958 9.958 0 00-4.512 1.074l-1.78-1.781zm4.261 4.26l1.514 1.515a2.003 2.003 0 012.45 2.45l1.514 1.514a4 4 0 00-5.478-5.478z\"\n                clipRule=\"evenodd\"\n              />\n              <path d=\"M12.454 16.697L9.75 13.992a4 4 0 01-3.742-3.741L2.335 6.578A9.98 9.98 0 00.458 10c1.274 4.057 5.065 7 9.542 7 .847 0 1.669-.105 2.454-.303z\" />\n            </svg>\n          ) : (\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-6 w-6\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n            >\n              <path d=\"M10 12a2 2 0 100-4 2 2 0 000 4z\" />\n              <path\n                fillRule=\"evenodd\"\n                d=\"M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n          )}\n        </div>\n      </h1>\n      {isShowing && <p className=\"text-center text-gray-300\">per 100 MH/s</p>}\n      <Transition\n        show={isShowing}\n        appear={true}\n        enter=\"transition-opacity duration-75\"\n        enterFrom=\"opacity-0\"\n        enterTo=\"opacity-100\"\n        leave=\"transition-opacity duration-150\"\n        leaveFrom=\"opacity-100\"\n        leaveTo=\"opacity-0\"\n      >\n        {isLoading ? (\n          <div className=\"text-2xl mt-6\">\n            <Loader />\n          </div>\n        ) : (\n          rewardsList && (\n            <div>\n              <table className=\"table-auto text-xs md:text-xl w-full max-w-7xl my-4 mx-auto overflow-x-auto\">\n                <thead>\n                  <tr className=\" bg-gray-800\">\n                    <th className=\"px-1 sm:px-2 md:px-12 py-2\">\n                      ETH/USDT Rate\n                    </th>\n                    <th className=\"px-1 sm:px-2 md:px-12 py-2\">\n                      ETH Expected Reward\n                    </th>\n                    <th className=\"px-1 sm:px-2 md:px-12 py-2\">\n                      USD Expected Reward\n                    </th>\n                    <th className=\"px-1 sm:px-2 md:px-12 py-2\">Date</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {rewardsList.map((reward, index) => (\n                    <Transition.Child\n                      as=\"tr\"\n                      key={reward.timestamp}\n                      className=\"bg-gray-700 hover:bg-gray-600 transition-colors odd:bg-gray-800\"\n                      enter=\"transition-opacity ease-linear duration-150\"\n                      enterFrom=\"opacity-0\"\n                      enterTo=\"opacity-100\"\n                      leave=\"transition-opacity ease-linear duration-150\"\n                      leaveFrom=\"opacity-100\"\n                      leaveTo=\"opacity-0\"\n                    >\n                      <td className=\"border border-gray-300 p-2\">\n                        ${reward.exchangeRate}\n                      </td>\n                      <td className=\"border border-gray-300 p-2\">\n                        {reward.expectedReward24H.toFixed(5)} ETH\n                      </td>\n                      <td className=\"border border-gray-300 p-2\">\n                        $\n                        {calcCryptoEarning(\n                          reward.expectedReward24H,\n                          reward.exchangeRate,\n                          100\n                        ).toFixed(2)}\n                      </td>\n                      <td\n                        className=\"border border-gray-300 p-2\"\n                        title={dayjs(reward.timestamp).format(\n                          'HH:mm DD/MM/YYYY'\n                        )}\n                      >\n                        {dayjs(reward.timestamp).format('DD/MM/YYYY')}\n                      </td>\n                    </Transition.Child>\n                  ))}\n                </tbody>\n              </table>\n              {rewardsCount <= MAX_ITEMS_IN_REWARDS_HISTORY_TABLE && (\n                <div className=\"flex justify-center\">\n                  <button\n                    className=\"text-center rounded py-2 px-4 hover:bg-gray-600 transition-colors\"\n                    onClick={() => onClickShowMoreButton()}\n                  >\n                    Show More\n                  </button>\n                </div>\n              )}\n            </div>\n          )\n        )}\n      </Transition>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Dashboard } from './components/dashboard/Dashboard'\nimport { RewardsHistoryTable } from './components/RewardsHistoryTable'\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"bg-gray-800 min-h-screen\">\n      <div className=\"md:container mx-auto p-4 top-8 md:top-20\">\n        <Dashboard />\n        <RewardsHistoryTable />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './App'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}